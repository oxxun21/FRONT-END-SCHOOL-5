// 반복되는 코드를 만들지 말라(Don't Repeat Yourself - 앤드루 헌트, 데이비드 토머스의 실용주의 프로그래머)
// 중복된 코드로 인한 혼란
// 작업 분량의 증가로 인한 효율성 악화

// 1. 밴더 프리픽스를 포함한 border, gradient 등의 코드로 효율성 극대화 할 수 있음
// 2. less보다 많은 기능을 보유하고 있음(그러나 각 장단점이 있음)
// 3. reset.css 같은 경우에도 포함해 사용할 수 있음.(포함하지 않는 경우도 있음, 작업의 일관성)

// 한 줄 주석입니다.
/* 두 줄 주석입니다. */
/* 두 줄 주석만 컴파일 파일에 남는다. */

.one{
  color: blue;
  .two{
      color: green;
      .three{
          color: red;
      }
  }
}

// 계층구조로 만듬
ul {
  li {
    color: salmon;
    font-size: 10px;
  }
}

// 속성 Nesting (background 속성들을 한번에 가져갈 수 있음)
.add-icon {
  background : {
    image: url("./assets/arrow-right-solid.svg");
    position: center center;
    repeat: no-repeat;
    size: 14px 14px;
  }
}

// ampersand 앰퍼샌드 &
// .box {
//     &:focus{} // 가상선택자
//     &:hover{}
//     &:active{}
//     &:first-child{} 
//     &:nth-child(2){}
//     &::after{} // 가상요소
//     &::before{} 
// }

.box {
  height: 100px;
  width: 100px;
  background-color: lightcoral;
  transition: all .5s;
  &:hover {
    background-color: green;
  }
}

ul {
  li {
    &:hover {
      background-color: #fff;
      cursor: pointer;
    }
    &:last-child {
      border: 2px solid black;
    }
  }
}

ol {
  border: 1px solid black;
  li {
    &:nth-child(1) {
      color: red;
    }
    &:nth-child(2) {
      color: gold;
    }
    &:nth-child(3) {
      color: orange;
    }
  }
}

.box {
  &-yellow {
    background-color: yellow;
  }
  &-green {
    background-color: green;
  }
  &-blue {
    background-color: blue;
  }
} // box-yellow 처럼 들어감

// @at-root 중첩 벗어나기 (2단계 이상 중첩되는 것은 지양하자) -> 사용 ↓
.article {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 10px;
  .article-content {
    font-size: 14px;
    opacity: 0.7;
    @at-root i {
      opacity: 0.5;
    }
  }
}

.one {
  color: yellow;
  .two {
    color: blue;
    .three {
      color: green;
      @at-root .four {
        color: red;
      }
    }
  }
}
